VERSION= '0.0.3'
APPNAME= 'ux'

srcdir= '.'
blddir= 'bin'

def set_options(ctx):
  ctx.tool_options('compiler_cxx')
  ctx.tool_options('unittestt')
    
def configure(ctx):
  ctx.check_tool('compiler_cxx')
  ctx.check_tool('unittestt')  
  ctx.env.CXXFLAGS += ['-O2', '-Wall', '-g']

def build(bld):
  bld(
       features     = 'cxx cshlib',
       source       = 'ux.cpp bitVec.cpp rsDic.cpp uxUtil.cpp uxMap.cpp',
       name         = 'ux',
       target       = 'ux',
       includes     = '.')
  bld(
       features     = 'cxx cstaticlib',
       source       = 'ux.cpp bitVec.cpp rsDic.cpp uxUtil.cpp uxMap.cpp',
       name         = 'ux',
       target       = 'ux',
       includes     = '.')
  bld(
       features     = 'cxx cprogram',
       source       = 'uxMain.cpp',
       target       = 'ux',
       includes     = '.',
       uselib_local = 'ux')
  bld(
       features     = 'cxx cprogram gtest',
       source       = 'uxTest.cpp',
       target       = 'ux_test',
       uselib_local = 'ux' ,
       uselib       = '',
       includes     = '.')
  bld(
       features     = 'cxx cprogram gtest',
       source       = 'bitVecTest.cpp',
       target       = 'bitvec_test',
       uselib_local = 'ux' ,
       uselib       = '',
       includes     = '.')

  bld(
       features     = 'cxx cprogram gtest',
       source       = 'uxMapTest.cpp',
       target       = 'uxmap_test',
       uselib_local = 'ux' ,
       uselib       = '',
       includes     = '.')

  bld.install_files('${PREFIX}/include/ux', bld.path.ant_glob('*.hpp'))
