UX tutorial (Japanese)

== はじめに ==

uxはコンパクトなtrieを構築・操作するためのライブラリです．従来のtrieの実装に比べて1/5～1/20の作業領域料で辞書を保持することができ、数億～数十億キーワードの大規模な辞書を効率的に扱うことができます。
Trieはキー集合に対する処理を効率的に行うことができるデータ構造であり、キーが辞書中に存在しているか、キーの接頭辞に一致する全ての辞書を列挙するなどの操作を効率的に行うことができます．


== txからの相違点 ==

uxは[http://code.google.com/p/tx-trie/|tx]の後継のライブラリです．
txからの相違点は以下のとおりです。

- 構築時にファイルを作成する必要が無い
- 連想配列を標準でサポート
- 構築後の作業領域量はtxの1/2～1/3
- ソースコードの大幅なリファクタリング


== インストール方法 ==
[http://code.google.com/p/ux-trie/downloads/list download_list]から最新版をux-x.x.x.tar.bz2をダウンロードします．

次のようにしてインストールします．
{{{
> tar xvjf ux-x.x.x.tar.bz2
> cd ux-x.x.x
> ./waf configure
> ./waf
> sudo ./waf install
}}}

== コマンドラインから使ってみる ==

プログラムuxが利用可能です。uxを利用して、辞書を作成すること、また作成した辞書を利用して、探索操作を行うことが可能です。

まず一行に一キーワードが書かれたファイルを用意します
{{{
% head keylist
吉祥寺
改築
三越
円
..
}}}

これに対するux辞書を作成します。-w でキーワードファイル、-i で保存するファイルを指定します。
{{{
% ux -w keylist -i index
}}}
これでkeylisttに対する辞書を作成し、その結果をindexに保存しました。

{{{
% ux -i index
}}}
-iのみを指定した場合は対話的に辞書に対する検索を行ないます。


{{{
% ux -i index
read:477917 keys
>特異点
query:[特異点]
prefixSearch: 特異点    (id=217401)
commonPrefixSearch: 1 found.
特異点  (id=217401)
predictiveSearch: 2 found.
特異点  (id=217401)
特異点定理      (id=251731)
}}}

